package gui.modal;

import gui.image.VentanaInternaImagen;
import gui.VentanaPrincipal;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import sm.cdlt.util.Utils;

/**
 * This class For contact with me visit https://www.sudano.net or send me a
 * email
 * <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 *
 * @author <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 * created on 01-may-2016
 */
public class QuestionsRescaleImage extends Questions {

    /**
     * Ventana modal que se encarga de hacer diferentes preguntas al usuario.
     *
     * @param parent [in] Este será el padre de la ventana modal
     * @param modal [in] Aqui indicamos el tipo de ventana modal que queremos:
     * si podemos pinchar fuera de ella sin seleccionar nada o por el contrario
     * tenemos que seleccionar algo para cerrar la ventana y continuar.
     */
    public QuestionsRescaleImage(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // uso lo siguiente para poner el tamaño de la imagen origen en los spinners
        VentanaInternaImagen vi = (VentanaInternaImagen) this.myParent.getEscritorio().getSelectedFrame();
        this.jSpinnerAncho.setValue((int) vi.getLienzo().getImage().getWidth());
        this.jSpinnerAlto.setValue((int) vi.getLienzo().getImage().getHeight());
        super.setContentDialog(this.jPanelContent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelContent = new javax.swing.JPanel();
        jPanelSppiners = new javax.swing.JPanel();
        jLabelAncho = new javax.swing.JLabel();
        jSpinnerAncho = new javax.swing.JSpinner();
        jLabelAlto = new javax.swing.JLabel();
        jSpinnerAlto = new javax.swing.JSpinner();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelContent.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanelContent.setPreferredSize(new java.awt.Dimension(200, 100));
        jPanelContent.setLayout(new javax.swing.BoxLayout(jPanelContent, javax.swing.BoxLayout.PAGE_AXIS));

        jPanelSppiners.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        jLabelAncho.setLabelFor(jSpinnerAncho);
        jLabelAncho.setText("Ancho");
        jPanelSppiners.add(jLabelAncho);

        jSpinnerAncho.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jSpinnerAnchoMouseWheelMoved(evt);
            }
        });
        jPanelSppiners.add(jSpinnerAncho);

        jLabelAlto.setLabelFor(jSpinnerAlto);
        jLabelAlto.setText("Alto");
        jPanelSppiners.add(jLabelAlto);

        jSpinnerAlto.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jSpinnerAltoMouseWheelMoved(evt);
            }
        });
        jPanelSppiners.add(jSpinnerAlto);

        jPanelContent.add(jPanelSppiners);
        jPanelContent.add(filler2);

        getContentPane().add(jPanelContent, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinnerAnchoMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jSpinnerAnchoMouseWheelMoved
        if (evt.getPreciseWheelRotation() < 0) {
            if ((int) this.jSpinnerAncho.getValue() < this.MAX_PIXEL_IMAGE) {
                this.jSpinnerAncho.setValue((int) this.jSpinnerAncho.getValue() + 7);
            }
        } else if ((int) this.jSpinnerAncho.getValue() > 0) {
            this.jSpinnerAncho.setValue((int) this.jSpinnerAncho.getValue() - 7);
        }
    }//GEN-LAST:event_jSpinnerAnchoMouseWheelMoved

    private void jSpinnerAltoMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jSpinnerAltoMouseWheelMoved
        if (evt.getPreciseWheelRotation() < 0) {
            if ((int) this.jSpinnerAlto.getValue() < this.MAX_PIXEL_IMAGE) {
                this.jSpinnerAlto.setValue((int) this.jSpinnerAlto.getValue() + 7);
            }
        } else if ((int) this.jSpinnerAlto.getValue() > 0) {
            this.jSpinnerAlto.setValue((int) this.jSpinnerAlto.getValue() - 7);
        }
    }//GEN-LAST:event_jSpinnerAltoMouseWheelMoved

    @Override
    public void jButtonOkActionPerformed(ActionEvent evt) {
        VentanaInternaImagen vi = (VentanaInternaImagen) this.myParent.getEscritorio().getSelectedFrame();
        BufferedImage imgAux = vi.getLienzo().getImage();
        VentanaPrincipal.UNDO = imgAux;
        this.myParent.setEnabledUndo(true);
        vi.getLienzo().rescaleImage((int)this.jSpinnerAncho.getValue(), (int)this.jSpinnerAlto.getValue());
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabelAlto;
    private javax.swing.JLabel jLabelAncho;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelSppiners;
    private javax.swing.JSpinner jSpinnerAlto;
    private javax.swing.JSpinner jSpinnerAncho;
    // End of variables declaration//GEN-END:variables
}
