package gui;

import java.awt.Dimension;
import java.awt.image.BufferedImage;

/**
 * This class For contact with me visit https://www.sudano.net or send me a
 * email
 * <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 *
 * @author <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 * created on 24-abr-2016
 */
public class Questions extends javax.swing.JDialog {

    /**
     * Tamaño maximo para las imagenes
     */
    private final int MAX_PIXEL_IMAGE = 4000;
    
    /**
     * Ventana modal que se encarga de hacer diferentes preguntas al usuario.
     * 
     * @param parent [in] Este será el padre de la ventana modal
     * @param modal [in] Aqui indicamos el tipo de ventana modal que queremos:
     * si podemos pinchar fuera de ella sin seleccionar nada o por el contrario
     * tenemos que seleccionar algo para cerrar la ventana y continuar.
     */
    public Questions(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // colocamos el cuadro de dialogo en el centro
        this.setLocation((int) this.getParent().getWidth() / 2 - (int) this.getWidth() / 2, (int) this.getParent().getHeight() / 2 - (int) this.getHeight() / 2);
        // Ponemos el tamaño predeterminado para la imagen
        this.jSpinnerWidth.setValue(VentanaPrincipal.MAX_VALUE_SPPINER);
        this.jSpinnerHeigth.setValue(VentanaPrincipal.MAX_VALUE_SPPINER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabelDescription = new javax.swing.JLabel();
        jLabelIcon = new javax.swing.JLabel();
        jPanelContent = new javax.swing.JPanel();
        jPanelSpinners = new javax.swing.JPanel();
        jLabelWidth = new javax.swing.JLabel();
        jSpinnerWidth = new javax.swing.JSpinner();
        jLabelHeigth = new javax.swing.JLabel();
        jSpinnerHeigth = new javax.swing.JSpinner();
        jPanelTransparencia = new javax.swing.JPanel();
        jCheckBoxTransparencia = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(380, 220));
        setResizable(false);

        jPanelButtons.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanelButtons.setPreferredSize(new java.awt.Dimension(45, 45));
        jPanelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("interna/Bundle"); // NOI18N
        jButtonOk.setText(bundle.getString("BUTTON_OK")); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonOk);

        jButtonCancel.setText(bundle.getString("BUTTON_CANCEL")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonCancel);

        getContentPane().add(jPanelButtons, java.awt.BorderLayout.SOUTH);

        jLabelDescription.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabelDescription.setText(bundle.getString("QUESTION_DESCRIPTION")); // NOI18N
        jLabelDescription.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 15, 5, 5));
        jLabelDescription.setFocusable(false);
        getContentPane().add(jLabelDescription, java.awt.BorderLayout.NORTH);

        jLabelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon_pregunta.png"))); // NOI18N
        jLabelIcon.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 30, 5, 5));
        jLabelIcon.setOpaque(true);
        getContentPane().add(jLabelIcon, java.awt.BorderLayout.WEST);

        jPanelContent.setLayout(new javax.swing.BoxLayout(jPanelContent, javax.swing.BoxLayout.PAGE_AXIS));

        jPanelSpinners.setLayout(new java.awt.GridLayout(2, 2));

        jLabelWidth.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabelWidth.setText(bundle.getString("WIDTH")); // NOI18N
        jPanelSpinners.add(jLabelWidth);

        jSpinnerWidth.setOpaque(false);
        jSpinnerWidth.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jSpinnerWidthMouseWheelMoved(evt);
            }
        });
        jPanelSpinners.add(jSpinnerWidth);

        jLabelHeigth.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabelHeigth.setText(bundle.getString("HEIGTH")); // NOI18N
        jPanelSpinners.add(jLabelHeigth);

        jSpinnerHeigth.setOpaque(false);
        jSpinnerHeigth.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jSpinnerHeigthMouseWheelMoved(evt);
            }
        });
        jPanelSpinners.add(jSpinnerHeigth);

        jPanelContent.add(jPanelSpinners);

        jPanelTransparencia.setLayout(new java.awt.BorderLayout());

        jCheckBoxTransparencia.setText(bundle.getString("TRANSPARENCY")); // NOI18N
        jCheckBoxTransparencia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 15));
        jCheckBoxTransparencia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanelTransparencia.add(jCheckBoxTransparencia, java.awt.BorderLayout.CENTER);

        jPanelContent.add(jPanelTransparencia);

        getContentPane().add(jPanelContent, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción que se realiza al pulsar el botón de aceptación de la acción.
     * 
     * @param evt [in] información del evento.
     */
    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        VentanaPrincipal parent = (VentanaPrincipal) this.getParent();
        VentanaInterna ultima_ventana = (VentanaInterna) parent.getEscritorio().getSelectedFrame();
        // dimensión de la imagen
        Dimension dim;
        // ancho
        int w = (int) this.jSpinnerWidth.getValue();
        // alto
        int h = (int) this.jSpinnerHeigth.getValue();

        // tamaño de la imagen que queremos crear
        // @TODO aqui tenemos que controlar si el usuario pone un dato incorrecto
        // intentar lanzar una exception.
        if (w > 0 && h > 0) {
            dim = new Dimension(w, h);
        } else {
            dim = new Dimension(250, 250);
        }
        
        VentanaInterna vi = new VentanaInterna(parent, dim, BufferedImage.TYPE_INT_ARGB);
        if (ultima_ventana != null) {
            vi.setLocation(ultima_ventana.getLocation().x + 15, ultima_ventana.getLocation().y + 15);
        } else {
            vi.setLocation(15, 15);
        }
        parent.getEscritorio().add(vi);
        vi.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed

    /**
     * Acción que se realiza al pulsar el botón de cancelación de la acción.
     * 
     * @param evt [in] información del evento.
     */
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * Con este método hacemos que el valor del spinner de anchura incremente
     * o disminuya con la rueda del ratón.
     * 
     * @param evt [in] información del evento.
     */
    private void jSpinnerWidthMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jSpinnerWidthMouseWheelMoved
        if (evt.getPreciseWheelRotation() < 0) {
            if ((int) this.jSpinnerWidth.getValue() < this.MAX_PIXEL_IMAGE) {
                this.jSpinnerWidth.setValue((int) this.jSpinnerWidth.getValue() + 7);
            }
        } else if ((int) this.jSpinnerWidth.getValue() > 0) {
            this.jSpinnerWidth.setValue((int) this.jSpinnerWidth.getValue() - 7);
        }
    }//GEN-LAST:event_jSpinnerWidthMouseWheelMoved

    /**
     * Con este método hacemos que el valor del spinner de altura incremente
     * o disminuya con la rueda del ratón.
     * 
     * @param evt [in] información del evento.
     */
    private void jSpinnerHeigthMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jSpinnerHeigthMouseWheelMoved
        if (evt.getPreciseWheelRotation() < 0) {
            if ((int) this.jSpinnerHeigth.getValue() < this.MAX_PIXEL_IMAGE) {
                this.jSpinnerHeigth.setValue((int) this.jSpinnerHeigth.getValue() + 7);
            }
        } else if ((int) this.jSpinnerHeigth.getValue() > 0) {
            this.jSpinnerHeigth.setValue((int) this.jSpinnerHeigth.getValue() - 7);
        }
    }//GEN-LAST:event_jSpinnerHeigthMouseWheelMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxTransparencia;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelHeigth;
    private javax.swing.JLabel jLabelIcon;
    private javax.swing.JLabel jLabelWidth;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelSpinners;
    private javax.swing.JPanel jPanelTransparencia;
    private javax.swing.JSpinner jSpinnerHeigth;
    private javax.swing.JSpinner jSpinnerWidth;
    // End of variables declaration//GEN-END:variables
}
