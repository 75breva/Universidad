package gui.modal;

import gui.image.VentanaInternaImagen;
import java.awt.Color;
import java.awt.event.ActionEvent;
import javax.swing.JColorChooser;
import sm.cdlt.graphics.myExtraInfo;

/**
 * This class For contact with me visit https://www.sudano.net or send me a
 * email
 * <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 *
 * @author <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 * created on 03-jun-2016
 */
public class QuestionsColors extends Questions {

    /**
     * Variable que almacena todos los botones de colores
     */
    private javax.swing.JButton[] botones;
    /**
     * Variable que almacena el controlador de eventos.
     */
    private ButtonColorListener buttonColorListener;

    /**
     * Ventana modal que se encarga de hacer diferentes preguntas al usuario.
     *
     * @param parent [in] Este será el padre de la ventana modal
     * @param modal [in] aquí indicamos el tipo de ventana modal que queremos:
     * si podemos pinchar fuera de ella sin seleccionar nada o por el contrario
     * tenemos que seleccionar algo para cerrar la ventana y continuar.
     */
    public QuestionsColors(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        myInitComponents();
        this.setContentDialog(this.jPanelContent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupOptions = new javax.swing.ButtonGroup();
        jPanelContent = new javax.swing.JPanel();
        jPanelNothing = new javax.swing.JPanel();
        jRadioButtonNothing = new javax.swing.JRadioButton();
        jPanelSolid = new javax.swing.JPanel();
        jRadioButtonSolido = new javax.swing.JRadioButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(32767, 0));
        jButtonColorSolid = new javax.swing.JButton();
        jPanelGradient = new javax.swing.JPanel();
        jRadioButtonDegradado = new javax.swing.JRadioButton();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(32767, 0));
        jPanelOptions = new javax.swing.JPanel();
        jLabelTypeGradiant = new javax.swing.JLabel();
        jComboBoxTipeGradiant = new javax.swing.JComboBox<>();
        jLabelCountColors = new javax.swing.JLabel();
        jSpinnerCountColors = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelContent.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanelContent.setLayout(new java.awt.GridLayout(4, 0));

        jPanelNothing.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonGroupOptions.add(jRadioButtonNothing);
        jRadioButtonNothing.setSelected(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("internalization/Bundle"); // NOI18N
        jRadioButtonNothing.setText(bundle.getString("NOTHING_RB")); // NOI18N
        jRadioButtonNothing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeStatusComponents();
            }
        });
        jPanelNothing.add(jRadioButtonNothing);

        jPanelContent.add(jPanelNothing);

        jPanelSolid.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonGroupOptions.add(jRadioButtonSolido);
        jRadioButtonSolido.setText(bundle.getString("SOLIDO_COLOR_RB")); // NOI18N
        jRadioButtonSolido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeStatusComponents();
            }
        });
        jPanelSolid.add(jRadioButtonSolido);
        jPanelSolid.add(filler4);

        jButtonColorSolid.setBorder(null);
        jButtonColorSolid.setEnabled(false);
        jButtonColorSolid.setMaximumSize(new java.awt.Dimension(20, 20));
        jButtonColorSolid.setMinimumSize(new java.awt.Dimension(20, 20));
        jButtonColorSolid.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanelSolid.add(jButtonColorSolid);

        jPanelContent.add(jPanelSolid);

        jPanelGradient.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonGroupOptions.add(jRadioButtonDegradado);
        jRadioButtonDegradado.setText(bundle.getString("GRADIENT_COLOR_RB")); // NOI18N
        jRadioButtonDegradado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeStatusComponents();
            }
        });
        jPanelGradient.add(jRadioButtonDegradado);
        jPanelGradient.add(filler5);

        jPanelContent.add(jPanelGradient);

        jPanelOptions.setLayout(new java.awt.GridLayout(2, 2, 2, 2));

        jLabelTypeGradiant.setText(bundle.getString("LIST_TYPE_GRADIANT")); // NOI18N
        jLabelTypeGradiant.setEnabled(false);
        jPanelOptions.add(jLabelTypeGradiant);

        jComboBoxTipeGradiant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lineal de 2 Colores", "Lineal de N Colores", "Radial de 2 Colores", "Radial de N Colores" }));
        jComboBoxTipeGradiant.setEnabled(false);
        jComboBoxTipeGradiant.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                changeStatusComponents();
            }
        });
        jPanelOptions.add(jComboBoxTipeGradiant);

        jLabelCountColors.setText(bundle.getString("COLORS_COUNT")); // NOI18N
        jLabelCountColors.setEnabled(false);
        jPanelOptions.add(jLabelCountColors);

        jSpinnerCountColors.setModel(new javax.swing.SpinnerNumberModel(2, 2, myExtraInfo.MAX_COLORS_FILL, 1));
        jSpinnerCountColors.setEnabled(false);
        jSpinnerCountColors.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeStatusComponents();
            }
        });
        jPanelOptions.add(jSpinnerCountColors);

        jPanelContent.add(jPanelOptions);

        getContentPane().add(jPanelContent, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método personalizado para la creación de los componentes
     */
     // <editor-fold defaultstate="collapsed" desc="My Init Components">//GEN-BEGIN:myInitComponents
    private void myInitComponents() {
        this.buttonColorListener = new ButtonColorListener();
        this.jButtonColorSolid.addActionListener(this.buttonColorListener);
        this.botones = new javax.swing.JButton[myExtraInfo.MAX_COLORS_FILL];
        for (int i = 0; i < myExtraInfo.MAX_COLORS_FILL; i++) {
            this.botones[i] = new javax.swing.JButton();
            this.botones[i].setBorder(null);
            this.botones[i].setMaximumSize(new java.awt.Dimension(20, 20));
            this.botones[i].setMinimumSize(new java.awt.Dimension(20, 20));
            this.botones[i].setPreferredSize(new java.awt.Dimension(20, 20));
            this.botones[i].setEnabled(false);
            this.botones[i].addActionListener(this.buttonColorListener);
            this.jPanelGradient.add(this.botones[i]);
        }
    }// </editor-fold>//GEN-END:myInitComponents

    /**
     * Método que se encarga de cambiar el estado actual de los componentes, los
     * que están habilitados pasan a no estarlo y viceversa, se usa este único
     * método para la visualización.
     */
    private void changeStatusComponents() {
        this.jButtonColorSolid.setEnabled(this.jRadioButtonSolido.isSelected());
        this.jLabelTypeGradiant.setEnabled(this.jRadioButtonDegradado.isSelected());
        this.jComboBoxTipeGradiant.setEnabled(this.jRadioButtonDegradado.isSelected());
        if (this.jComboBoxTipeGradiant.getSelectedIndex() == 1 || this.jComboBoxTipeGradiant.getSelectedIndex() == 3) {
            this.jLabelCountColors.setEnabled(this.jRadioButtonDegradado.isSelected());
            this.jSpinnerCountColors.setEnabled(this.jRadioButtonDegradado.isSelected());
        } else {
            this.jSpinnerCountColors.setValue(2);
            this.jLabelCountColors.setEnabled(false);
            this.jSpinnerCountColors.setEnabled(false);
        }
        for (int i = 0; i < myExtraInfo.MAX_COLORS_FILL; i++) {
            if (this.jRadioButtonDegradado.isSelected() && i < (int) this.jSpinnerCountColors.getValue()) {
                this.botones[i].setEnabled(true);
            } else {
                this.botones[i].setEnabled(false);
            }
        }
        repaint();
    }

    /**
     * Clase que se encarga de las acciones de los botones auto generados para
     * elegir los colores de los degradados.
     */
    private class ButtonColorListener implements java.awt.event.ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Color colordlg = JColorChooser.showDialog(QuestionsColors.this.myParent, "Elige color:", Color.BLACK);
            ((javax.swing.JButton) e.getSource()).setBackground(colordlg);
        }
    }

    @Override
    public void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaInternaImagen vi = (VentanaInternaImagen) this.myParent.getEscritorio().getSelectedFrame();
        Color[] auxcolors;
        float[] auxfractions;
        if (this.jRadioButtonNothing.isSelected()) {
            auxcolors = null;
            auxfractions = null;
            vi.getLienzo().setFill(0, auxfractions, auxcolors);
        } else if (this.jRadioButtonSolido.isSelected()) {
            vi.getLienzo().setFillColor(this.jButtonColorSolid.getBackground());
        } else if (jRadioButtonDegradado.isSelected()) {
            auxcolors = new Color[(int)this.jSpinnerCountColors.getValue()];
            auxfractions = new float[(int)this.jSpinnerCountColors.getValue()];
            for (int i = 0; i < (int)this.jSpinnerCountColors.getValue(); i++) {
                auxcolors[i] = this.botones[i].getBackground();
                auxfractions[i] = i * 0.1f + (0.9f/(int)this.jSpinnerCountColors.getValue());
            }
            if (this.jComboBoxTipeGradiant.getSelectedIndex() == 0 || this.jComboBoxTipeGradiant.getSelectedIndex() == 1){
                vi.getLienzo().setFill(2, auxfractions, auxcolors);
            }else{
                vi.getLienzo().setFill(3, auxfractions, auxcolors);
            }
        }
        this.myParent.getToggleButtonRelleno().setSelected(true);
        this.dispose();
    }

//    @Override
//    protected void jButtonCancelActionPerformed(ActionEvent evt) {
//        VentanaInternaImagen vi = (VentanaInternaImagen) this.myParent.getEscritorio().getSelectedFrame();
//        //para dejarlo sin relleno
//        vi.getLienzo().setFill();
//        this.myParent.getToggleButtonRelleno().setSelected(false);
//        super.jButtonCancelActionPerformed(evt);
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupOptions;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.JButton jButtonColorSolid;
    private javax.swing.JComboBox<String> jComboBoxTipeGradiant;
    private javax.swing.JLabel jLabelCountColors;
    private javax.swing.JLabel jLabelTypeGradiant;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelGradient;
    private javax.swing.JPanel jPanelNothing;
    private javax.swing.JPanel jPanelOptions;
    private javax.swing.JPanel jPanelSolid;
    private javax.swing.JRadioButton jRadioButtonDegradado;
    private javax.swing.JRadioButton jRadioButtonNothing;
    private javax.swing.JRadioButton jRadioButtonSolido;
    private javax.swing.JSpinner jSpinnerCountColors;
    // End of variables declaration//GEN-END:variables

}
