package gui.modal;

import gui.VentanaPrincipal;
import sm.cdlt.util.Utils;

/**
 * This class For contact with me visit https://www.sudano.net or send me a
 * email
 * <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 *
 * @author <a href="mailto:cdelatorre@correo.ugr.es">Carlos de la Torre</a>
 * created on 24-abr-2016
 */
public abstract class Questions extends javax.swing.JDialog {

    /**
     * Tamaño máximo para las imágenes
     */
    protected final int MAX_PIXEL_IMAGE = 4000;
    /**
     * Variable que almacena cual es mi padre
     */
    protected final VentanaPrincipal myParent;
    /**
     * Ventana modal que se encarga de hacer diferentes preguntas al usuario.
     *
     * @param parent [in] Este será el padre de la ventana modal
     * @param modal [in] Aquí indicamos el tipo de ventana modal que queremos:
     * si podemos pinchar fuera de ella sin seleccionar nada o por el contrario
     * tenemos que seleccionar algo para cerrar la ventana y continuar.
     */
    public Questions(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.myParent = (VentanaPrincipal) parent;
        initComponents();
        // colocamos el cuadro de dialogo en el centro
        this.setLocation(Utils.centerOfScreen(this.getWidth(), this.getHeight()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDescription = new javax.swing.JLabel();
        jLabelIcon = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.BorderLayout(2, 2));

        jLabelDescription.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabelDescription.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 15, 5, 5));
        getContentPane().add(jLabelDescription, java.awt.BorderLayout.NORTH);

        jLabelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icon_pregunta.png"))); // NOI18N
        getContentPane().add(jLabelIcon, java.awt.BorderLayout.WEST);

        jPanelButtons.setMinimumSize(new java.awt.Dimension(10, 45));
        jPanelButtons.setPreferredSize(new java.awt.Dimension(10, 45));
        jPanelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("internalization/Bundle"); // NOI18N
        jButtonOk.setText(bundle.getString("BUTTON_OK")); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonOk);

        jButtonCancel.setText(bundle.getString("BUTTON_CANCEL")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonCancel);

        getContentPane().add(jPanelButtons, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción que se realiza al pulsar el botón de cancelación de la acción.
     *
     * @param evt [in] información del evento.
     */
    protected void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    public abstract void jButtonOkActionPerformed(java.awt.event.ActionEvent evt);//GEN-FIRST:event_jButtonOkActionPerformed
//GEN-LAST:event_jButtonOkActionPerformed

    /**
     * Para poner la descripción del cuadro de diálogo
     *
     * @param d [in] Esta será una descripción breve del cuadro de diálogo.
     */
    public void setDescriptionDialog(String d){
        this.jLabelDescription.setText(d);
    }

    /**
     * Para poner la definición que queramos al botón de aceptar usamos este método
     *
     * @param d [in] Como se llama el botón de aceptar.
     */
    public void setTextButtonOk(String d){
        this.jButtonOk.setText(d);
    }

    /**
     * Con este método asignamos le contenido a la parte principal del
     * cuadro de diálogo.
     *
     * @param c [in] Objeto de tipo Panel con el contenido del cuadro de dialogo.
     */
    public void setContentDialog(javax.swing.JPanel c){
        getContentPane().add(c, java.awt.BorderLayout.CENTER);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelIcon;
    private javax.swing.JPanel jPanelButtons;
    // End of variables declaration//GEN-END:variables
}
